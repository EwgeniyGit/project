@model EQDataModel.tUserFunctions

@using (Ajax.BeginForm("AddUserFunction", "Lists", new AjaxOptions { UpdateTargetId = "LoadedContent" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Добавление новой функции</legend>
        
        <div class="container">
            <div class="editor-label">
               @Html.LabelFor(model => model.FunctionName)
                (Полное описание на русском)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FunctionName)
                @Html.ValidationMessageFor(model => model.FunctionName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.FunctionShortName)
                (В одно слово на английском)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FunctionShortName)
                @Html.ValidationMessageFor(model => model.FunctionShortName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AcessToObject)
                (Запрашивается доступ к объекту)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AcessToObject)
                @Html.ValidationMessageFor(model => model.AcessToObject)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Action)
                (Тип запрашиваемого действия: Read, Write, Create)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Action)
                @Html.ValidationMessageFor(model => model.Action)
            </div>
        
            <p>
                <input type="submit" class="btn-block" value="Создать функцию" />
            </p>
        </div>
    </fieldset>
}

<div>
    @Ajax.ActionLink("Назад, к списку функций", "RolesRightsFunctionsList", new AjaxOptions { HttpMethod="GET", UpdateTargetId="LoadedContent" })
</div>
